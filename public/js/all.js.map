{"version":3,"sources":["app.js","controllers/auth.js","controllers/job.js","controllers/jobs.js","controllers/main.js","controllers/user.js","services/auth.js","services/elements.js","services/form.js","services/jobs.js","services/modal.js","services/validation.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc overview\n * @name jpApp\n * @description\n * # jpApp\n *\n * Main module of the application.\n */\nangular\n\t.module('jpApp', [\n\t\t'ngAnimate',\n\t\t'ngCookies',\n\t\t'ngResource',\n\t\t'ngRoute',\n\t\t'ngSanitize',\n\t\t'ngTouch',\n\t\t'xeditable'\n\t])\n\t.config(function ($routeProvider,$locationProvider) {\n\t\tconsole.log('Route Provider',$routeProvider);\n\n\t\t$routeProvider\n\t\t\t.when('/',{\n\t\t\t\ttemplateUrl\t:\t'/views/main.html',\n\t\t\t\tcontroller\t:\t'MainCtrl',\n\t\t\t\tcontrollerAs\t:\t'main'\n\t\t\t})\n\t\t\t.when('/jobs',{\n\t\t\t\ttemplateUrl\t:\t'/views/jobs.html',\n\t\t\t\tcontroller\t:\t'JobsCtrl',\n\t\t\t\tcontrollerAs: \t'jobs'\n\t\t\t})\n\t\t\t.when('/jobs/:jobId',{\n\t\t\t\ttemplateUrl\t:\t'/views/partials/jobs/view-job.html',\n\t\t\t\tcontroller\t:\t'JobCtrl',\n\t\t\t\tcontrollerAs: \t'job'\n\t\t\t})\n\t\t\t.otherwise({\n\t\t\t\ttemplateUrl : \t'Not Found'\n\t\t\t});\n\n\t\t//$locationProvider.html5Mode(true);\n\t}).run(function(editableOptions,editableThemes) {\n\t\teditableThemes.bs3.inputClass = 'input-sm';\n\t\teditableThemes.bs3.buttonsClass = 'btn-sm';\n\t\teditableOptions.theme = 'bs3';\n\t});\n  \n","'use strict';\n\n/**\n * @ngdoc function\n * @name jpApp.controller:AuthCtrl\n * @description\n * # AuthCtrl\n * Controller of the jpApp\n */\nangular.module('jpApp')\n\t.controller('AuthCtrl', function (/*$auth,$state,*/$rootScope,$scope,validation,form,elements,modal,jobs,$location,$route) {\n\t\tthis.awesomeThings = [\n\t\t  'HTML5 Boilerplate',\n\t\t  'AngularJS',\n\t\t  'Karma'\n\t\t];\n\t\t\n\t\tif(!$rootScope.job){\n\t\t\t$rootScope.job = {\n\t\t\t\t\n\t\t\t};\n\t\t\t$rootScope.$location = {};\n\t\t\n\t\t\t$rootScope.$location.base = $location.path().split('\\/')[1];\n\t\t}\n\t\t\n\t\t\n\t\t//var vm = this;\n\t\t\n        $scope.login = function($event) {\n\t\t\t\n\t\t\t$event.preventDefault();\n\n\t\t\tconsole.log($rootScope);\n\t\t\t\n\t\t\tvar modalContent\t=\tangular.element($event.currentTarget).parents()[1],\n\t\t\t\tform\t\t\t=\tangular.element(modalContent).find('form').serializeArray();\n\t\t\t\t/*\n\t\t\t\tcredentials\t\t=\t{\n\t\t\t\t\temail\t\t:\tform[0].value,\n\t\t\t\t\tpassword\t: \tform[1].value\n\t\t\t\t};\n\t\t\t\t*/\n\t\t\t\t\n\t\t\tvalidation.validate(form).then(function(result){\n\t\t\t\t//remove spinner\n\t\t\t\tangular.element('.spinner').remove();\n\t\t\t\t\n\t\t\t\tif(result.valid){\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t/* Use Satellizer's $auth service to login\n\t\t\t\t\t$auth.login(credentials).then(function(data) {\n\t\t\t\t\t\tconsole.log('Data',data);\n\t\t\t\t\t\t// If login is successful, redirect to the users state\n\t\t\t\t\t\t//$state.go('users', {});\n\t\t\t\t\t});\n\t\t\t\t\t*/\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t});\n\t\t\t\n            \n        };\n\t\t\n\t\t$scope.signIn\t=\tfunction(){\n\t\t\tvar modalType\t=\t'small',\n\t\t\t\tmodalTitle\t=\t'Login',\n\t\t\t\tmodalBody\t=\tform.login(),\n\t\t\t\tmodalFooter\t=\telements.button({\ttype\t:\t'submit',\tcls:\t'btn-primary btn-lg btn-block',\tngClick\t:\t'login($event)'\t},'Login');\n\t\t\t\t\n\t\t\tmodal.modal(modalType,modalTitle,modalBody,modalFooter,$scope).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\t\n\t\t\t});\n\t\t};\n\t\t\n\t\t$scope.closeModal\t=\tfunction(){\n\t\t\tangular.element('#modal').modal('hide').remove();\n\t\t};\n\t\t\n\t\tif(!$rootScope.job.options){\n\t\t\tjobs.getData('joboptions',false).then(function(result){\n\t\t\t\tconsole.log('Got a job options',result);\n\t\t\t\t$rootScope.job.options = result.data;\n\t\t\t\t$rootScope.job.options.job_status = [{\n\t\t\t\t\tid \t\t: \t1,\n\t\t\t\t\tname\t:\t'Draft',\t\n\t\t\t\t},{\n\t\t\t\t\tid \t\t: \t2,\n\t\t\t\t\tname\t:\t'Published',\t\n\t\t\t\t}];\n\t\t\t});\n\t\t}\n\t\t\n\t});\n","'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name jpApp.controller:JobsCtrl\r\n * @description\r\n * # JobsCtrl\r\n * Controller of the jpApp\r\n */\r\nangular.module('jpApp')\r\n\t.controller('JobCtrl', function ($scope,jobs,$route,$location,$filter,modal,elements,$rootScope)\r\n\t{\r\n\t\tthis.awesomeThings = [\r\n\t\t  'HTML5 Boilerplate',\r\n\t\t  'AngularJS',\r\n\t\t  'Karma'\r\n\t\t];\r\n\t\t\r\n\t\t$rootScope.$location.title = '';\r\n\t\t\r\n\t\tvar autocomplete,self = this;\r\n\t\t\r\n\t\tthis.data = {};\r\n\t\t\r\n\t\tconsole.log($route);\r\n\t\t\r\n\t\tif(!$scope.currentJob){\r\n\t\t\tjobs.getData('jobs',$route.current.params.jobId).then(function(result){\r\n\t\t\t\t$scope.currentJob = result.data;\r\n\t\t\t\t$scope.cache = result.data;\r\n\t\t\t\tconsole.log('Got a job',$scope.currentJob);\r\n\t\t\t\t$rootScope.$location.title = $scope.currentJob.title;\r\n\t\t\t\tangular.element('.loading').hide();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\t\r\n\t\t$scope.jobOptions = function(options) {\r\n\t\t\tswitch(options){\r\n\t\t\t\tcase 'job_status' :  return function(){\r\n\t\t\t\t\tvar selected = $filter('filter')($rootScope.job.options.job_status, {value: $scope.currentJob.status});\r\n\t\t\t\t\treturn ($scope.currentJob.status && selected.length) ? selected[0].text : 'Not set';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t$scope.updateJob = function(){\r\n\t\t\tangular.forEach($scope.currentJob,function(value,key){\r\n\t\t\t\tconsole.log('Value',value);\r\n\t\t\t\tconsole.log('Key',key);\r\n\t\t\t\t/*if(value){\r\n\t\t\t\t\tif(key === 'job_status'){\r\n\t\t\t\t\t\tself.data['status'] = value.name\r\n\t\t\t\t\t}else if(key === 'application_deadline'){\r\n\t\t\t\t\t\tself.data[key] = value\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tself.data[key+'_id'] = value.id\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.data = $scope.currentJob;\r\n\t\t\t\r\n\t\t\tconsole.log('Data',this.data);\r\n\t\t\t\r\n\t\t\t//jobs.sendData('jobs',$route.current.params.jobId,this.data).then(function(result){\r\n\t\t\t\t//console.log('Got a Response',result);\r\n\t\t\t\t//$scope.currentJob = result.data;\r\n\t\t\t//});\r\n\t\t}\r\n\t\t\r\n\t\t$scope.cancel = function(){\r\n\t\t\tconsole.log('Edit Cancelled');\r\n\t\t\tangular.element('#modal').modal('close');\r\n\t\t\t//angular.element('#job_location').val('');\r\n\t\t\t//angular.element('#modal form').get(0).reset();\r\n\t\t\t//$scope.currentJob = $scope.cache;\r\n\t\t\t$route.reload();\r\n\t\t}\r\n\t\t\r\n\t\t$scope.edit = function(){\r\n\t\t\tvar modalType\t=\t'bottom-sheet',\r\n\t\t\t\tmodalTitle\t=\t'',\r\n\t\t\t\tmodalBody\t=\t'',\r\n\t\t\t\tmodalFooter\t=\t'';\r\n\t\t\t\r\n\t\t\tmodalTitle\t+=\t'<h4 class=\"left\">Edit Job</h4>';\r\n\t\t\tmodalTitle\t+=\t'<div class=\"right\">'+elements.form.check({name : 'job_category' , model:'currentJob.status',colSize: 12,label1:'Draft',label2:'Published'})+'</div>';\r\n\t\t\t\r\n\t\t\tmodalFooter\t+=\telements.button({\ttype\t:\t'button',\tcls:\t'btn  red accent-4',\tngClick\t:\t'cancel()'\t},'Cancel');\r\n\t\t\tmodalFooter\t+=\telements.button({\ttype\t:\t'submit',\tcls:\t'btn',\tngClick\t:\t'updateJob()'\t},'Save');\r\n\t\t\t\r\n\t\t\tmodalBody\t+=\t'<form>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.input({ type:'text' ,colSize: 3, cls:'autocomplete', model:'currentJob.title' , label : 'Job Title' , name : 'job_title' , required:true });\r\n\t\t\tmodalBody\t+=\t\t\telements.form.select({ colSize: 3, cls:'' , label : 'Job Type' , name : 'job_type' , model:'currentJob.job_type' , required:true});\r\n\t\t\tmodalBody\t+=\t\t\telements.form.select({ colSize: 3, cls:'' , label : 'Job Level' , name : 'job_level' , model:'currentJob.job_level' , required:true});\r\n\t\t\tmodalBody\t+=\t\t\telements.form.select({ colSize: 3, cls:'' , label : 'Job Category' , name : 'job_category' , model:'currentJob.job_category' , required:true});\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.input({ type:'text' ,colSize: 6, cls:'autocomplete', model:'currentJob.location.name' , label : 'Job Location' , name : 'job_location' , required:true });\r\n\t\t\tmodalBody\t+=\t\t\telements.form.select({ colSize: 6, cls:'' , model:'currentJob.min_qualifications' , label : 'Minimum Qualification' , name : 'job_min_qualification' });\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.range({ colSize: 12, cls:'', model:'currentJob.min_experience' , label : 'Minimum Experience' , name : 'job_min_experience' , min:0,max:15 });\r\n\t\t\tmodalBody\t+=\t\t'</div>';\t\t\t\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\t'<div class=\"range-field col m12\">';\r\n\t\t\tmodalBody\t+=\t\t\t\t'<label>Salary</label>';\r\n\t\t\tmodalBody\t+=\t\t\t\t'<div id=\"salary\"></div>';\r\n\t\t\tmodalBody\t+=\t\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.select({ colSize: 12, cls:'', model:'currentJob.salary_type' , label : 'Salary Type' , name : 'salary_type' , required:true });\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.textarea({ colSize: 12, cls:'' , label : 'Job Description' , name : 'job_description' , model:'currentJob.description' , required:true});\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\t'<div class=\"range-field col m12\">';\r\n\t\t\tmodalBody\t+=\t\t\t'<label>Required Skills</label>';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.chips({ colSize: 12, cls:'' , label : 'Required Skills' , name : 'required_skills' , model:'currentJob.required_skills',chipType : 'chips-initial'});\r\n\t\t\tmodalBody\t+=\t\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t\t'<div class=\"row\">';\r\n\t\t\tmodalBody\t+=\t\t\telements.form.date({ colSize: 12, cls:'' , label : 'Application Deadline' , name : 'application_deadline' , model:'currentJob.application_deadline', required:true });\r\n\t\t\tmodalBody\t+=\t\t'</div>';\r\n\t\t\tmodalBody\t+=\t'</form>';\r\n        \r\n\t\t\t\r\n\t\t\tmodal.modal(modalType,modalTitle,modalBody,modalFooter,$scope).then(function(result){\r\n\t\t\t\tangular.element('select').material_select();\r\n\t\t\t\t\r\n\t\t\t\tCKEDITOR.editorConfig\t=\tfunction( config ){\r\n\t\t\t\t\tconfig.toolbar\t=\t[\r\n\t\t\t\t\t\t{name:'clipboard',items:['Cut','Copy','Paste','PasteText','Undo','Redo']},\r\n\t\t\t\t\t\t{name:'paragraph',items:['NumberedList','BulletedList']}\r\n\t\t\t\t\t];\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tCKEDITOR.replace( 'job_description' ).on( 'change', function( evt ) {\r\n\t\t\t\t\t$scope.currentJob.description = evt.editor.getData();\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tangular.element('.chips-initial').on('chip.add', function(e, chip){\r\n\t\t\t\t\t$scope.currentJob.required_skills = angular.element(this).material_chip('data');\r\n\t\t\t\t}).on('chip.delete', function(e, chip){\r\n\t\t\t\t\t$scope.currentJob.required_skills = angular.element(this).material_chip('data');\r\n\t\t\t\t}).material_chip({\r\n\t\t\t\t\tplaceholder: 'Skills',\r\n\t\t\t\t\tdata: $scope.currentJob.required_skills\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// Create the autocomplete object, restricting the search to geographical\r\n\t\t\t\t// location types.\r\n\t\t\t\tautocomplete = new google.maps.places.Autocomplete(\r\n\t\t\t\t\t/** @type {!HTMLInputElement} */(angular.element('input#job_location').get(0)),\r\n\t\t\t\t\t{types: ['geocode']});\r\n\r\n\t\t\t\t// When the user selects an address from the dropdown, populate the address\r\n\t\t\t\t// fields in the form.\r\n\t\t\t\tautocomplete.addListener('place_changed', function(){\r\n\t\t\t\t\tvar place = this.getPlace();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log('Place',place);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.currentJob.location.name = place.name ? place.name : '';\r\n\t\t\t\t\t\r\n\t\t\t\t\tplace.address_components.map(function(value,key){\r\n\t\t\t\t\t\t//console.log('Value',value);\r\n\t\t\t\t\t\t$scope.currentJob.location[value.types[0]] = {};\r\n\t\t\t\t\t\t$scope.currentJob.location[value.types[0]].long_name = value.long_name ? value.long_name : '';\r\n\t\t\t\t\t\t$scope.currentJob.location[value.types[0]].short_name = value.short_name ? value.short_name : '';\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tvar slider = angular.element('#salary').get(0);\r\n\t\t\t\t\r\n\t\t\t\tnoUiSlider.create(slider, {\r\n\t\t\t\t   start: [20, 80],\r\n\t\t\t\t   connect: true,\r\n\t\t\t\t   step: 500,\r\n\t\t\t\t   range: {\r\n\t\t\t\t\t 'min': 0,\r\n\t\t\t\t\t 'max': 1000000000\r\n\t\t\t\t   },\r\n\t\t\t\t   format: wNumb({\r\n\t\t\t\t\t decimals: 0\r\n\t\t\t\t   })\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tslider.noUiSlider.on('change', function(value){\r\n\t\t\t\t\t$scope.currentJob.salary  = value;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t$('.datepicker').pickadate({\r\n\t\t\t\t\tselectMonths: true, // Creates a dropdown to control month\r\n\t\t\t\t}).on('change',function(e){\r\n\t\t\t\t\t$scope.currentJob.application_deadline = new Date(angular.element(e.currentTarget).val());\r\n\t\t\t\t});\r\n        \r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t});\r\n","'use strict';\n\n/**\n * @ngdoc function\n * @name jpApp.controller:JobsCtrl\n * @description\n * # JobsCtrl\n * Controller of the jpApp\n */\nangular.module('jpApp')\n\t.controller('JobsCtrl', function ($scope,jobs,$routeParams,$route,$location,$compile,$rootScope)\n\t{\n\t\tthis.awesomeThings = [\n\t\t  'HTML5 Boilerplate',\n\t\t  'AngularJS',\n\t\t  'Karma'\n\t\t];\n\t\t\t\t\n\t\t$rootScope.$location.title = $rootScope.$location.base;\n\t\t\n\t\t$scope.init\t=\tfunction(){\n\t\t\tvar str = '';\n\t\t\tjobs.getData('jobs').then(function(result){\n\t\t\t\tMaterialize.toast('Got some jobs'+result.data.length, 3000)\n\t\t\t\t//console.log('Got some jobs',result);\n\t\t\t\t$scope.jobs = result.data;\n\t\t\t\tstr\t=\t'<li class=\"col m12\" ng-repeat=\"job in jobs\" ng-include=\"\\'views/partials/jobs/job.html\\'\"></li>';\n\t\t\t\tangular.element('ul.jobs').append($compile(str)($scope));\n\t\t\t\tangular.element('.loading').hide();\n\t\t\t});\n\t\t};\n\t\t\n\t\t$scope.init();\n\t\t\n\t});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name jpApp.controller:MainCtrl\n * @description\n * # MainCtrl\n * Controller of the jpApp\n */\nangular.module('jpApp')\n\t.controller('MainCtrl', function () {\n\t\tangular.element('.loading').hide();\n\t});\n","'use strict';\n\n/**\n * @ngdoc function\n * @name jpApp.controller:UserCtrl\n * @description\n * # UserCtrl\n * Controller of the jpApp\n */\nangular.module('jpApp')\n\t.controller('UserCtrl', function ($scope,$rootScope,modal,elements,validation,auth,form) {\n\t\t\n    \t$scope.signIn\t=\tfunction(){\n\t\t\tvar modalType\t=\t'small',\n\t\t\t\tmodalTitle\t=\t'Login',\n\t\t\t\tmodalBody\t=\tform.login(),\n\t\t\t\tmodalFooter\t=\telements.button({\ttype\t:\t'submit',\tcls:\t'btn-primary btn-lg btn-block',\tngClick\t:\t'login($event)'\t},'Login');\n\t\t\t\t\n\t\t\tmodal.modal(modalType,modalTitle,modalBody,modalFooter,$scope).then(function(result){\n\t\t\t\tconsole.log(result);\n\t\t\t\t\n\t\t\t});\n\t\t};\n\t\t\n\t\t$scope.login\t=\tfunction($event){\n\t\t\t//add Spinner\n\t\t\t$event.preventDefault();\n\t\t\t\n\t\t\tconsole.log($rootScope);\n\t\t\t\n\t\t\tvar modalContent\t=\tangular.element($event.currentTarget).parents()[1],\n\t\t\t\tform\t\t\t=\tangular.element(modalContent).find('form').serializeArray(),\n\t\t\t\tformData\t\t=\t{\n\t\t\t\t\temail\t\t:\tform[0].value,\n\t\t\t\t\tpassword\t: \tform[1].value\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tvalidation.validate(form).then(function(result){\n\t\t\t\t\t//remove spinner\n\t\t\t\t\tangular.element('.spinner').remove();\n\t\t\t\t\t\n\t\t\t\t\tif(result.valid){\n\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log('Root',$root);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tauth.authenticate(formData).then(function(result){\n\t\t\t\t\t\t\tconsole.log('Authentication Result',result);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t\t});\n\t\t};\n\t\t\n\t\t$scope.closeModal\t=\tfunction(){\n\t\t\tangular.element('#modal').modal('hide');\n\t\t};\n\t});\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.auth\n * @description\n * # auth\n * Service in the jpApp.\n */\nangular.module('jpApp')\n\t.service('auth', function ($q,$http) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\t\treturn\t{\n\t\t\tauthenticate\t:\tfunction(object){\n\t\t\t\tvar deferred\t=\t$q.defer();\n\t\t\t\t\t\n\t\t\t\tconsole.log('Form Object',object);\n\t\t\t\t\n\t\t\t\t//console.log($http.post('/api/authenticate'));\n\t\t\t\t\n\t\t\t\t$http.post('/api/authenticate',object).then(\tfunction(result){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction(error){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.resolve(error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t};\n\t});\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.elements\n * @description\n * # elements\n * Factory in the jpApp.\n */\nangular.module('jpApp')\n  .factory('elements', function () {\n    return {\n\t\tcolumn\t:\tfunction(num,body){\n\t\t\tvar str=\t'';\n\t\t\tif( typeof num ===\t'number'){\n\t\t\t\tstr\t+=\t'<div class=\"col m'+num+'\">';\n\t\t\t\tstr\t+=\t\tbody;\n\t\t\t\tstr\t+=\t'</div>';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t}else{\n\t\t\t\tstr\t+=\t'<div class=\"col m'+num[0]+' s'+num[1]+'\">';\n\t\t\t\tstr\t+=\t\tbody;\n\t\t\t\tstr\t+=\t'</div>';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t}\n\t\t},\n\t\tbutton\t:\tfunction(object,body){\n\t\t\tvar str\t=\t'';\n\t\t\t\n\t\t\tstr\t+=\t'<button class=\"btn '+object.cls+'\"';\n\t\t\tstr\t+=\t\tobject.type\t\t?\t'type=\"'+object.type+'\"'\t:\t'';\n\t\t\tstr\t+=\t\tobject.ngClick\t?\t'ng-click=\"'+object.ngClick+'\">'\t:\t'>';\n\t\t\tstr\t+=\t\tbody;\n\t\t\tstr\t+=\t'</button>';\n\t\t\t\n\t\t\treturn str;\n\t\t},\n\t\tform\t:\t{\n\t\t\t\n\t\t\tinput\t:\tfunction(object){\n\t\t\t\tvar\tstr\t=\t'';\n\t\t\t\t\n\t\t\t\tstr +=\t'<div class=\"input-field col m'+object.colSize.toString()+' s12\">';\n\t\t\t\tstr\t+=\t'<input ';\n\t\t\t\tstr\t+=\tobject.type\t?\t'type=\"'+object.type+'\"' : '';\n\t\t\t\tstr\t+=\tobject.cls  ? \t'class=\"'+object.cls+'\"' : '';\n\t\t\t\tstr\t+=\tobject.label ? ' placeholder=\"'+object.label+'\"' : '';\n\t\t\t\tstr\t+=\tobject.model\t?\t' ng-model=\"'+object.model+'\" '\t:\t'';\n\t\t\t\tstr\t+=\tobject.value\t?\t' ng-value=\"'+object.model+'\" '\t:\t'';\n\t\t\t\tstr\t+=\tobject.name\t?\t' name=\"'+object.name+'\" id=\"'+object.name+'\"'\t:\t'';\n\t\t\t\tstr\t+=\tobject.required\t?\t' data-required=\"true\" required=\"true\"'\t:\t'';\n\t\t\t\tstr\t+=\t'>';\n\t\t\t\tstr\t+=\t'<label ';\n\t\t\t\tstr\t+=\tobject.model\t?\t' class=\"active\" '\t:\t'';\n\t\t\t\tstr\t+=  'for=\"'+object.name+'\">';\n\t\t\t\tstr\t+=\tobject.label ?  object.label+(object.required ? ' *' : '') : '';\n\t\t\t\tstr +=  '</label>';\n\t\t\t\tstr +=  '</div>';\n\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\t\n\t\t\tinputGroup\t:\tfunction(icon,object){\n\t\t\t\tvar str\t\t=\t'',\n\t\t\t\t\tself\t=\tthis;\n\t\t\t\t\n\t\t\t\tstr\t+=\t'<div class=\"input-group\">';\n\t\t\t\tstr\t+=\t\t'<span class=\"input-group-addon\">'+icon+'</span>';\n\t\t\t\tstr\t+=\t\tself.input(object);\n\t\t\t\tstr\t+=\t'</div>';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\t\n\t\t\tselect\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr +=\t'<div class=\"input-field col m'+object.colSize.toString()+' s12\">';\n\t\t\t\tstr +=\t'<select ';\n\t\t\t\tstr +=\tobject.cls ? 'class=\"'+object.cls+'\"' : '';\n\t\t\t\tstr +=\tobject.model ? 'ng-model=\"'+object.model+'\"' : '';\n\t\t\t\tstr\t+=\tobject.required\t?\t' data-required=\"true\"'\t:\t'';\n\t\t\t\tstr +=\t'ng-options=\"g as g.name for g in $root.job.options.'+object.name+'s track by g.id\">';\n\t\t\t\t//str +=\t'<option value=\"\" disabled selected>Choose your option</option>';\n\t\t\t\tstr +=\t'</select>';\n\t\t\t\tstr +=\tobject.label ? '<label>'+object.label+(object.required ? ' *' : '')+'</label>' : '';\n\t\t\t\tstr +=\t'</div>';\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\ttextarea\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr +=\t'<div class=\"input-field col m'+object.colSize.toString()+' s12\">';\n\t\t\t\tstr +=\t'<textarea class=\"materialize-textarea';\n\t\t\t\tstr +=\tobject.cls ? object.cls+'\"' : '\"';\n\t\t\t\tstr\t+=\tobject.name\t?\t' name=\"'+object.name+'\" id=\"'+object.name+'\"'\t:\t'';\n\t\t\t\tstr\t+=\tobject.required\t?\t' data-required=\"true\"'\t:\t'';\n\t\t\t\tstr +=\tobject.model ? 'ng-model=\"'+object.model+'\">' : '>';\n\t\t\t\tstr +=\t'</textarea>';\n\t\t\t\t//str +=\tobject.label ? '<label>'+object.label+'</label>' : '';\n\t\t\t\tstr +=\t'</div>';\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\tchips\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr\t+=\t' <div class=\"chips '+object.chipType+'\"></div>';\n\t\t\t\treturn \tstr;\n\t\t\t},\n\t\t\trange\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr\t+=\t'<p class=\"range-field col m'+object.colSize.toString()+' s12\">';\n\t\t\t\tstr\t+=\t\t'<label>'+object.label+(object.required ? '*' : '')+'</label>';\n\t\t\t\tstr\t+=\t\t'<input type=\"range\"';\n\t\t\t\tstr\t+=\t\tobject.name\t?\t' name=\"'+object.name+'\" id=\"'+object.name+'\"'\t:\t'';\n\t\t\t\tstr\t+=\t\tobject.model\t?\t' ng-model=\"'+object.model+'\" '\t:\t'';\n\t\t\t\tstr\t+=\t\tobject.min ? 'min=\"'+object.min+'\"' : '';\n\t\t\t\tstr\t+=\t\tobject.max ? 'max=\"'+object.max+'\"' : '';\n\t\t\t\t//str\t+=\t\tobject.step ? 'step=\"'+object.step+'\"' : '';\n\t\t\t\tstr\t+=\t\tobject.required ? 'required />' : ' />';\n\t\t\t\tstr\t+=\t'</p>';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\tcheck\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr\t+=\t'<div class=\"switch col m'+object.colSize.toString()+' s12\">';\n\t\t\t\tstr\t+=\t'\t<label>';\n\t\t\t\tstr\t+=\tobject.label1;\n\t\t\t\tstr\t+=\t'\t  <input type=\"checkbox\"';\n\t\t\t\tstr\t+=\tobject.model\t?\t' ng-model=\"'+object.model+'\" '\t:\t'';\n\t\t\t\tstr\t+=\t'\t  >';\n\t\t\t\tstr\t+=\t'\t  <span class=\"lever\"></span>';\n\t\t\t\tstr\t+=\tobject.label2;\n\t\t\t\tstr\t+=\t'\t</label>';\n\t\t\t\tstr\t+=\t'</div>';\n  \n\t\t\t\treturn str;\n\t\t\t},\n\t\t\tdate\t:\tfunction(object){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\tstr +=\t'<div class=\"col s12 m'+object.colSize.toString()+'\">';\n\t\t\t\tstr +=\tobject.label ? '<label>'+object.label+(object.required ? ' *' : '')+'</label>' : '';\n\t\t\t\tstr\t+= ' <input type=\"date\" ';\n\t\t\t\tstr\t+= 'class=\"datepicker';\n\t\t\t\tstr +=\tobject.cls ? object.cls+'\"' : '\"';\n\t\t\t\tstr\t+=\tobject.model\t?\t' ng-model=\"'+object.model+'\" '\t:\t'';\n\t\t\t\tstr\t+=\tobject.required ? 'required />' : ' />';\n\t\t\t\tstr += '</div>';\n\t\t\t\treturn str;\n\t\t\t}\n\t\t},\n\t\tglyph\t:\tfunction(type){\n\t\t\tvar str\t=\t'';\n\t\t\t\n\t\t\tstr\t+=\t'<span class=\"glyphicon glyphicon-'+type+'\" aria-hidden=\"true\"></span>';\n\n\t\t\treturn str;\n\t\t}\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.form\n * @description\n * # form\n * Service in the jpApp.\n */\nangular.module('jpApp')\n\t.service('form', function (elements) {\n\t\t// AngularJS will instantiate a singleton by calling \"new\" on this function\n\t\treturn\t{\n\t\t\tlogin\t:\tfunction(){\n\t\t\t\tvar\tstr\t=\t'';\n\t\t\t\t\n\t\t\t\tstr\t+=\t'<form>';\n\t\t\t\tstr\t+=\t'<div class=\"row form-group\">';\n\t\t\t\tstr\t+=\telements.column(12,elements.form.inputGroup(elements.glyph('user'),{ \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype\t\t:\t'email',\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcls\t\t\t:\t'input-lg'\t,\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder\t:\t'Email'\t,\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodel\t\t:\t'',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname\t\t:\t'email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\t:\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\tstr\t+=\t'</div>';\n\t\t\t\tstr\t+=\t'<div class=\"row form-group\">';\n\t\t\t\tstr\t+=\telements.column(12,elements.form.inputGroup(elements.glyph('lock'),{ \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype\t\t:\t'password',\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcls\t\t\t:\t'input-lg'\t,\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder\t:\t'Password'\t,\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodel\t\t:\t'',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname\t\t:\t'password',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\t:\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\tstr\t+=\t'</div>';\n\t\t\t\tstr\t+=\t'</form>';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t},\n\t\t\t\n\t\t\tregister\t:\tfunction(){\n\t\t\t\tvar str\t=\t'';\n\t\t\t\t\n\t\t\t\treturn str;\n\t\t\t}\n\t\t};\n\t});\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.jobs\n * @description\n * # jobs\n * Service in the jpApp.\n */\nangular.module('jpApp')\n\t.service('jobs', function ($http) {\n\t\t// AngularJS will instantiate a singleton by calling \"new\" on this function\n\t\treturn{\n\t\t\tgetData\t:\tfunction($data,$id){\n\t\t\t\tconsole.log($data+' id',$id);\n\t\t\t\tif($id){\n\t\t\t\t\treturn $http.get($data+'/'+$id);\n\t\t\t\t}else{\n\t\t\t\t\treturn\t$http.get($data);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsendData\t:\tfunction($name,$id,$data){\n\t\t\t\tconsole.log($name+' id',$id);\n\t\t\t\tif($id){\n\t\t\t\t\treturn $http.put($name+'/'+$id,$data);\n\t\t\t\t}else{\n\t\t\t\t\treturn\t$http.post($name,$data);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.modalService\n * @description\n * # modalService\n * Service in the jpApp.\n */\nangular.module('jpApp')\n  .service('modal', function ($q,$compile) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\treturn\t{\n\t\tmodal\t:\tfunction(type,title,body,footer,$scope){\n\t\t\t\t\t\t\n\t\t\tvar str\t=\t'',\n\t\t\t\tdeferred\t=\t$q.defer();\n\t\t\t\n\t\t\tstr\t+=\t'<div id=\"modal\" class=\"modal '+type+'\">';\n\t\t\tstr += \t\t'<div class=\"container\">';\n\t\t\tstr\t+=\t\t\t'<div class=\"modal-content\">';\n\t\t\tstr += \t\t\t\t'<div class=\"row\">';\n\t\t\tstr\t+=\t\t\t\t\ttitle;\n\t\t\tstr\t+=\t\t\t\t'</div>';\n\t\t\tstr\t+=\t\t\t\t'<div class=\"row\">'+body+'</div>';\n\t\t\tstr\t+=\t\t\t'</div>';\n\t\t\tstr\t+=\t\t\tfooter ? '<div class=\"modal-footer\">'+footer+'</div>' : '';\n\t\t\tstr\t+=\t\t'</div>';\n\t\t\tstr\t+=\t'</div>';\n\t\t\t\n\t\t\tangular.element('body').append($compile(str)($scope));\n\t\t\t\n\t\t\tdeferred.resolve(str);\n\t\t\t\n\t\t\tangular.element('#modal').modal({ complete : function(){ angular.element('#modal').remove(); } }).modal('open');\n\t\t\t\n\t\t\treturn deferred.promise;\n\t\t}\n\t};\n  });\n","'use strict';\n\n/**\n * @ngdoc service\n * @name jpApp.validation\n * @description\n * # validation\n * Service in the jpApp.\n */\nangular.module('jpApp')\n\t.service('validation', function ($q) {\n\t\t// AngularJS will instantiate a singleton by calling \"new\" on this function\n\t\treturn {\n\t\t\tvalidate\t:\tfunction(form){\n\t\t\t\tvar deferred\t\t=\t$q.defer(),\n\t\t\t\t\tvalidated\t\t=\t[],\n\t\t\t\t\tformElement\t\t=\tangular.element(form),\n\t\t\t\t\tvalidatedCount\t=\t0,\n\t\t\t\t\telemCount\t\t=\tformElement.find('input').length;\n\t\t\t\t\t\t\n\t\t\tformElement.find('input').each(function(){\n\t\t\t\t\t\t\tvar element = angular.element(this);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(element[0].dataset.required){\n\t\t\t\t\t\t\t\tif(element.val()){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//add success class\n\t\t\t\t\t\t\t\t\telement.parent().removeClass('has-success')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.removeClass('has-error')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.addClass('has-success');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvalidated.push({\n\t\t\t\t\t\t\t\t\t\tname\t\t:\telement[0].name,\n\t\t\t\t\t\t\t\t\t\tvalue\t\t:\telement.val(),\n\t\t\t\t\t\t\t\t\t\tvalidated\t:\ttrue\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvalidatedCount++;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t//add error validation class to form element\n\t\t\t\t\t\t\t\t\telement.parent().removeClass('has-success')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.removeClass('has-error')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.addClass('has-error');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvalidated.push({\n\t\t\t\t\t\t\t\t\t\tname\t\t:\telement[0].name,\n\t\t\t\t\t\t\t\t\t\tvalue\t\t:\telement.val(),\n\t\t\t\t\t\t\t\t\t\tvalidated\t:\tfalse\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t//add success class\n\t\t\t\t\t\t\t\telement.parent().removeClass('has-error').addClass('has-success');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvalidated.push({\n\t\t\t\t\t\t\t\t\tname\t\t:\telement[0].name,\n\t\t\t\t\t\t\t\t\tvalue\t\t:\telement.val(),\n\t\t\t\t\t\t\t\t\tvalidated\t:\ttrue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\tconsole.log('Form Object',validatedCount,elemCount);\n\t\t\t\t\n\t\t\t\tif(validatedCount\t===\telemCount){\n\t\t\t\t\tdeferred.resolve({\tvalid\t:\ttrue\t,\tform\t:\tform\t});\n\t\t\t\t}else{\n\t\t\t\t\tdeferred.resolve({\tvalid\t:\tfalse\t,\tform\t:\tform\t});\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t};\n\t});\n"]}